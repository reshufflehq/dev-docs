{
  "items": [
    {
      "key": "homeRoute",
      "data": "example-content"
    },
    {
      "key": "content__example-content",
      "data": {
        "attributes": {
          "title": "Example Content",
          "route": "example-content",
          "category": "Main Concepts"
        },
        "body": "# Developer Documentation Template\n\nThis template serves as a generic \"developer documentation\" site. It boasts features such as:\n\n* Content as markdown\n* Markdown supports nested HTML (for when markdown isn't enough)\n* Support for syntax highlighting (including JSX)\n* Real-time editor and admin page which serves as a basic CMS\n* Responsive (works great on mobile or desktop)\n* Near perfect Google lighthouse score\n\n## Getting Started\n\nBefore deploying the template, you'll need to configure your environment, along with some external resources. To accomplish this, we recommend adding a `.env` file in the directory that contains this project. The `.env` file should have the following variables defined.\n\n**JWT_HMAC_KEY**\n\nPrivate key used to sign authentication tokens on the backend. This key should be long and secure (either using a private key or a [site like this](https://www.uuidgenerator.net/)). \n\n> Note: the `JWT_HMAC_KEY` controls all access to your site administration, keep it safe!\n\n\n**REACT_APP_VALID_HOSTED_DOMAIN**\n\nWith the current design, this template only works if you have a Google organization with its own [hosted domain.](https://developers.google.com/identity/protocols/OpenIDConnect#hd-param) This mechanism limits admin access to Google users with a `@<YOUR_HOSTED_DOMAIN>` email address.\n\n> Note: if this is set to `gmail.com` any gmail user will have admin access to your site!\n\n\n**REACT_APP_OAUTH_CLIENT_ID**\n\nTo utilize the Google-based login featured in this template, you'll need to create your own Google project. If you haven't done this already, [follow the steps described in this Google documentation.](https://developers.google.com/identity/protocols/OAuth2). Make sure to add your Reshuffle app URL as a valid origin domain on the \"Credentials\" page for your Google project ([Here is the generic version of that URL](https://console.developers.google.com/apis/credentials/oauthclient/)). \n\n\n\n**REACT_APP_AUTH_NAME**\n\nName that will be displayed on the admin login button. For example, if you set `REACT_APP_AUTH_NAME` to \"My Project\", the text would display as\n\n![](https://raw.githubusercontent.com/binaris/dev-docs-content/master/assets/auth-button-example.png)\n\n\n### Adding Content\n\nTo add content on the site, navigate to `https://<base-url>/editor`. At this point, you'll be asked to authenticate using your previously configured Google OAuth credentials. After successfully authenticating, you'll be redirected to the editor page.\n\n![](https://raw.githubusercontent.com/binaris/dev-docs-content/master/assets/dev-editor-screen.png)\n\n_The editor page_\n\nThe bottom half of the page can be used to write markdown, which will be parsed and displayed in real time. The \"Update\" button will update the content that you're currently editing (or create it if it doesn't exist). \"Select a Post\" allows you to retrieve existing posts and edit them as desired.\n\nFor a post to be recognized and displayed by the site, it must include a frontmatter with the following keys (additional keys are ok, these ones are required):\n\n```yaml\n---\ntitle:\nroute:\ncategory:\n---\n```\n\n**Title** controls the displayed name of the content on your site. \n\n**Route** determines what sub-URL the content will be available at. Valid routes can only contain lowercase letters, numbers and dashes (no spaces). For example, if my route was 'example-content', the content would be available at `https://<base-url>/example-content`.\n\n**Category** controls the sidebar category that your content will be displayed in. Note that this isn't strictly required, although your content will be completely hidden if omitted. Currently, the valid categories are:\n\n* Getting Started\n* Main Concepts\n* Other Goodies\n\n\n> When posts are created, they are initially disabled by default. You'll need to visit the `/admin` page to enable your post.\n\n### Managing Content\n\nTo manage content on the site, navigate to `https://<base-url>/admin`. Similarly to the `/editor` page, you'll be asked to authenticate using your previously configured Google OAuth credentials. After successfully authenticating, you'll be redirected to the `/admin` page.\n\n![](https://raw.githubusercontent.com/binaris/dev-docs-content/master/assets/dev-admin-screen.png)\n\n_The admin page_\n\nThe admin page provides mechanisms to enable, disable and delete pages. A home page for the site can also be set, using the \"Set as home\" button.\n\n> Note: only a single page can be set as the home route\n\n\nWe love feedback! To provide feedback about this template (or any other part of the Reshuffle experience), please reach out on [Twitter](https://twitter.com/reshufflehq), [Discord](https://discord.gg/M8CC5hy) or open an issue on [Github](https://github.com/reshufflehq).\n\n\n<br />",
        "frontmatter": "title: Example Content\nroute: example-content\ncategory: 'Main Concepts'",
        "parsed": "<h1 id=\"developer-documentation-template\"><a aria-hidden=\"true\" href=\"#developer-documentation-template\"><span class=\"icon icon-link\"></span></a>Developer Documentation Template</h1>\n<p>This template serves as a generic \"developer documentation\" site. It boasts features such as:</p>\n<ul>\n<li>Content as markdown</li>\n<li>Markdown supports nested HTML (for when markdown isn't enough)</li>\n<li>Support for syntax highlighting (including JSX)</li>\n<li>Real-time editor and admin page which serves as a basic CMS</li>\n<li>Responsive (works great on mobile or desktop)</li>\n<li>Near perfect Google lighthouse score</li>\n</ul>\n<h2 id=\"getting-started\"><a aria-hidden=\"true\" href=\"#getting-started\"><span class=\"icon icon-link\"></span></a>Getting Started</h2>\n<p>Before deploying the template, you'll need to configure your environment, along with some external resources. To accomplish this, we recommend adding a <code>.env</code> file in the directory that contains this project. The <code>.env</code> file should have the following variables defined.</p>\n<p><strong>JWT_HMAC_KEY</strong></p>\n<p>Private key used to sign authentication tokens on the backend. This key should be long and secure (either using a private key or a <a href=\"https://www.uuidgenerator.net/\">site like this</a>). </p>\n<blockquote>\n<p>Note: the <code>JWT_HMAC_KEY</code> controls all access to your site administration, keep it safe!</p>\n</blockquote>\n<p><strong>REACT_APP_VALID_HOSTED_DOMAIN</strong></p>\n<p>With the current design, this template only works if you have a Google organization with its own <a href=\"https://developers.google.com/identity/protocols/OpenIDConnect#hd-param\">hosted domain.</a> This mechanism limits admin access to Google users with a <code>@&#x3C;YOUR_HOSTED_DOMAIN></code> email address.</p>\n<blockquote>\n<p>Note: if this is set to <code>gmail.com</code> any gmail user will have admin access to your site!</p>\n</blockquote>\n<p><strong>REACT_APP_OAUTH_CLIENT_ID</strong></p>\n<p>To utilize the Google-based login featured in this template, you'll need to create your own Google project. If you haven't done this already, <a href=\"https://developers.google.com/identity/protocols/OAuth2\">follow the steps described in this Google documentation.</a>. Make sure to add your Reshuffle app URL as a valid origin domain on the \"Credentials\" page for your Google project (<a href=\"https://console.developers.google.com/apis/credentials/oauthclient/\">Here is the generic version of that URL</a>). </p>\n<p><strong>REACT_APP_AUTH_NAME</strong></p>\n<p>Name that will be displayed on the admin login button. For example, if you set <code>REACT_APP_AUTH_NAME</code> to \"My Project\", the text would display as</p>\n<p><img src=\"https://raw.githubusercontent.com/binaris/dev-docs-content/master/assets/auth-button-example.png\"></p>\n<h3 id=\"adding-content\"><a aria-hidden=\"true\" href=\"#adding-content\"><span class=\"icon icon-link\"></span></a>Adding Content</h3>\n<p>To add content on the site, navigate to <code>https://&#x3C;base-url>/editor</code>. At this point, you'll be asked to authenticate using your previously configured Google OAuth credentials. After successfully authenticating, you'll be redirected to the editor page.</p>\n<p><img src=\"https://raw.githubusercontent.com/binaris/dev-docs-content/master/assets/dev-editor-screen.png\"></p>\n<p><em>The editor page</em></p>\n<p>The bottom half of the page can be used to write markdown, which will be parsed and displayed in real time. The \"Update\" button will update the content that you're currently editing (or create it if it doesn't exist). \"Select a Post\" allows you to retrieve existing posts and edit them as desired.</p>\n<p>For a post to be recognized and displayed by the site, it must include a frontmatter with the following keys (additional keys are ok, these ones are required):</p>\n<pre><code class=\"language-yaml\">---\ntitle:\nroute:\ncategory:\n---\n</code></pre>\n<p><strong>Title</strong> controls the displayed name of the content on your site. </p>\n<p><strong>Route</strong> determines what sub-URL the content will be available at. Valid routes can only contain lowercase letters, numbers and dashes (no spaces). For example, if my route was 'example-content', the content would be available at <code>https://&#x3C;base-url>/example-content</code>.</p>\n<p><strong>Category</strong> controls the sidebar category that your content will be displayed in. Note that this isn't strictly required, although your content will be completely hidden if omitted. Currently, the valid categories are:</p>\n<ul>\n<li>Getting Started</li>\n<li>Main Concepts</li>\n<li>Other Goodies</li>\n</ul>\n<blockquote>\n<p>When posts are created, they are initially disabled by default. You'll need to visit the <code>/admin</code> page to enable your post.</p>\n</blockquote>\n<h3 id=\"managing-content\"><a aria-hidden=\"true\" href=\"#managing-content\"><span class=\"icon icon-link\"></span></a>Managing Content</h3>\n<p>To manage content on the site, navigate to <code>https://&#x3C;base-url>/admin</code>. Similarly to the <code>/editor</code> page, you'll be asked to authenticate using your previously configured Google OAuth credentials. After successfully authenticating, you'll be redirected to the <code>/admin</code> page.</p>\n<p><img src=\"https://raw.githubusercontent.com/binaris/dev-docs-content/master/assets/dev-admin-screen.png\"></p>\n<p><em>The admin page</em></p>\n<p>The admin page provides mechanisms to enable, disable and delete pages. A home page for the site can also be set, using the \"Set as home\" button.</p>\n<blockquote>\n<p>Note: only a single page can be set as the home route</p>\n</blockquote>\n<p>We love feedback! To provide feedback about this template (or any other part of the Reshuffle experience), please reach out on <a href=\"https://twitter.com/reshufflehq\">Twitter</a>, <a href=\"https://discord.gg/M8CC5hy\">Discord</a> or open an issue on <a href=\"https://github.com/reshufflehq\">Github</a>.</p>\n<br>",
        "raw": "---\ntitle: Example Content\nroute: example-content\ncategory: 'Main Concepts'\n---\n\n# Developer Documentation Template\n\nThis template serves as a generic \"developer documentation\" site. It boasts features such as:\n\n* Content as markdown\n* Markdown supports nested HTML (for when markdown isn't enough)\n* Support for syntax highlighting (including JSX)\n* Real-time editor and admin page which serves as a basic CMS\n* Responsive (works great on mobile or desktop)\n* Near perfect Google lighthouse score\n\n## Getting Started\n\nBefore deploying the template, you'll need to configure your environment, along with some external resources. To accomplish this, we recommend adding a `.env` file in the directory that contains this project. The `.env` file should have the following variables defined.\n\n**JWT_HMAC_KEY**\n\nPrivate key used to sign authentication tokens on the backend. This key should be long and secure (either using a private key or a [site like this](https://www.uuidgenerator.net/)). \n\n> Note: the `JWT_HMAC_KEY` controls all access to your site administration, keep it safe!\n\n\n**REACT_APP_VALID_HOSTED_DOMAIN**\n\nWith the current design, this template only works if you have a Google organization with its own [hosted domain.](https://developers.google.com/identity/protocols/OpenIDConnect#hd-param) This mechanism limits admin access to Google users with a `@<YOUR_HOSTED_DOMAIN>` email address.\n\n> Note: if this is set to `gmail.com` any gmail user will have admin access to your site!\n\n\n**REACT_APP_OAUTH_CLIENT_ID**\n\nTo utilize the Google-based login featured in this template, you'll need to create your own Google project. If you haven't done this already, [follow the steps described in this Google documentation.](https://developers.google.com/identity/protocols/OAuth2). Make sure to add your Reshuffle app URL as a valid origin domain on the \"Credentials\" page for your Google project ([Here is the generic version of that URL](https://console.developers.google.com/apis/credentials/oauthclient/)). \n\n\n\n**REACT_APP_AUTH_NAME**\n\nName that will be displayed on the admin login button. For example, if you set `REACT_APP_AUTH_NAME` to \"My Project\", the text would display as\n\n![](https://raw.githubusercontent.com/binaris/dev-docs-content/master/assets/auth-button-example.png)\n\n\n### Adding Content\n\nTo add content on the site, navigate to `https://<base-url>/editor`. At this point, you'll be asked to authenticate using your previously configured Google OAuth credentials. After successfully authenticating, you'll be redirected to the editor page.\n\n![](https://raw.githubusercontent.com/binaris/dev-docs-content/master/assets/dev-editor-screen.png)\n\n_The editor page_\n\nThe bottom half of the page can be used to write markdown, which will be parsed and displayed in real time. The \"Update\" button will update the content that you're currently editing (or create it if it doesn't exist). \"Select a Post\" allows you to retrieve existing posts and edit them as desired.\n\nFor a post to be recognized and displayed by the site, it must include a frontmatter with the following keys (additional keys are ok, these ones are required):\n\n```yaml\n---\ntitle:\nroute:\ncategory:\n---\n```\n\n**Title** controls the displayed name of the content on your site. \n\n**Route** determines what sub-URL the content will be available at. Valid routes can only contain lowercase letters, numbers and dashes (no spaces). For example, if my route was 'example-content', the content would be available at `https://<base-url>/example-content`.\n\n**Category** controls the sidebar category that your content will be displayed in. Note that this isn't strictly required, although your content will be completely hidden if omitted. Currently, the valid categories are:\n\n* Getting Started\n* Main Concepts\n* Other Goodies\n\n\n> When posts are created, they are initially disabled by default. You'll need to visit the `/admin` page to enable your post.\n\n### Managing Content\n\nTo manage content on the site, navigate to `https://<base-url>/admin`. Similarly to the `/editor` page, you'll be asked to authenticate using your previously configured Google OAuth credentials. After successfully authenticating, you'll be redirected to the `/admin` page.\n\n![](https://raw.githubusercontent.com/binaris/dev-docs-content/master/assets/dev-admin-screen.png)\n\n_The admin page_\n\nThe admin page provides mechanisms to enable, disable and delete pages. A home page for the site can also be set, using the \"Set as home\" button.\n\n> Note: only a single page can be set as the home route\n\n\nWe love feedback! To provide feedback about this template (or any other part of the Reshuffle experience), please reach out on [Twitter](https://twitter.com/reshufflehq), [Discord](https://discord.gg/M8CC5hy) or open an issue on [Github](https://github.com/reshufflehq).\n\n\n<br />",
        "disabled": false
      }
    }
  ]
}
